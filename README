README

Elevator Problem

My solution to the algorithm was initially to use a simplistic movement model, where the elevator would pick up people while moving up, drop them off while moving down, and then move to the bottom when completed. However, this did not actually incorporate the buttons at all, so I attempted to incorporate them with more complex algorithms. Unfortunately, I found that my experimentation at using more complex algorithms rarely resulted in more efficient movement than the original simplistic algorithm, oftentimes resulting in strange and error-prone behavior that was far worse than my original attempt. However, after stepping back, clearing a lot of my extraneous code, and carefully picking through my methods, I eventually found one solution that works. In its current form, my elevators' movement is governed by its status and a series of if statements. If the elevator is "up," it will move upward, if it is "down," it will move downward, and if it is stationary, it will move up or down depending on whether there are more pressed buttons above or below the elevator. If there are none, it returns to the bottom. The key to this strategy is a seperate method in the Building class, which I have designed as sort of a mediator between the Elevator and Floor classes. Floor and Elevator have no information about the other, so Building makes decisions for them based on what it knows about both. Essentially, Building watches for situations where there are people on a floor and no people on an elevator. When such a situation arises, it directs the elevator to have a status matching the direction that the majority of people on the floor want to move in (so if 6 people want to go up and 4 want to go down, an empty elevator will pick up the six). If a non-empty elevator passes a floor, it will only pick up people going in the same direction as it. Thus, the elevators can quickly respond to nearby requests, while not wasting time passing people that are travelling in the same direction. The only major flaw functionality-wise I can see with my current implementation is that some elevators will continue moving to the top floor before moving back to the ground, after all people have been delivered to their destination. While not a concern in terms of getting people to their destination as quickly as possible, this would obviously be a huge issue in a real-world setting, since it would waste electricity and make getting to the elevator less convenient for new people entering on the ground floor. I have yet to discover the source of this bug. 

Code Climate Link: 
Rating 3.2
<a href="https://codeclimate.com/github/silbmaerto/elevator"><img src="https://codeclimate.com/github/silbmaerto/elevator/badges/gpa.svg" /></a>